version: 2.1

anchors:
  - imageTag: &imageTag ${CIRCLE_SHA1:0:7}
  - imageName: &imageName jpgt-${CIRCLE_PROJECT_REPONAME}

orbs:
  docker: circleci/docker@1.5.0
  getty-devops-release: thegetty/devops-orb@3


workflows:
  build:
    jobs:
      - build:
          context: GETTY
      - publish-to-ecr:
          name: "Publish to Getty ECR"
          context: GETTY
          requires:
            - build
          filters:
            branches:
              only:
                - main
                - /^hotfix-.+$/
            tags:
              ignore: /.*/
      - publish-to-ecr:
          name: "Publish to JPC ECR"
          context: JPC
          requires:
            - build
          filters:
            branches:
              only:
                - main
                - /^hotfix-.+$/
            tags:
              ignore: /.*/
      - getty-devops-release/deployTo:
          name: "Deploy to Staging (JPC)"
          context: JPC
          repo_name: jpc-kubernetes
          repo_url: "git@github.com:thegetty/jpc-kubernetes.git"
          tag: *imageTag
          service: lod-gateway-aspace-jpc-l1,lod-gateway-rcv-jpc-l2
          requires:
            - build
            - "Publish to JPC ECR"
          filters:
            branches:
              only:
                - main
            tags:
              ignore: /.*/
      - getty-devops-release/deployTo:
          name: "Deploy to Prod (JPC)"
          context: JPC
          repo_name: jpc-kubernetes
          repo_url: "git@github.com:thegetty/jpc-kubernetes.git"
          tag: *imageTag
          service: lod-gateway-aspace-jpc-l1,lod-gateway-rcv-jpc-l2
          requires:
            - build
            - "Publish to JPC ECR"
          environment: prd
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v.*$/
      - getty-devops-release/deployTo:
          name: "Deploy to Staging (Getty)"
          context: GETTY
          tag: *imageTag
          service: lod-gateway-archivesspace-l1,lod-gateway-media-l2,lod-gateway-museum-collection-l2,lod-gateway-otmm-l1,lod-gateway-rcv-l2,lod-gateway-rosetta-l1,lod-gateway-vocab-l2,lod-gateway-provenance-l2,lod-gateway-annotations-l2,lod-gateway-tms-l1,lod-gateway-consonance-l1,lod-gateway-thesaurus-l2
          requires:
            - build
            - "Publish to Getty ECR"
          filters:
            branches:
              only:
                - main
            tags:
              ignore: /.*/
      - getty-devops-release/deployTo:
          name: "Deploy to Prod (Getty)"
          context: GETTY
          tag: *imageTag
          service: lod-gateway-archivesspace-l1,lod-gateway-media-l2,lod-gateway-museum-collection-l2,lod-gateway-otmm-l1,lod-gateway-rcv-l2,lod-gateway-rosetta-l1,lod-gateway-vocab-l2,lod-gateway-thesaurus-l2,lod-gateway-annotations-l2,lod-gateway-tms-l1,lod-gateway-consonance-l1
          environment: prd
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v.*$/


jobs:
  publish-to-ecr:
    executor: build_env
    steps:
      - setup
      - getty-devops-release/setup-aws
      - build: &imageDetails
          image: *imageName
          tag: *imageTag
      - do_the_upload
  build:
    executor: build_env
    steps:
      - setup
      - getty-devops-release/setup-aws
      - build: &imageDetails
          image: *imageName
          tag: *imageTag
      - test:
          <<: *imageDetails
      - store

commands:
  do_the_upload:
    steps:
      - getty-devops-release/retag:
          local-image: *imageName
          local-tag: *imageTag
          published-image: *imageName
          tag: *imageTag
      - getty-devops-release/push-to-ecr:
          image: *imageName
          tag: *imageTag
  setup:
    steps:
      - checkout
      - run:
          name: Prepare output
          command: |
            mkdir -p /tmp/output
            chmod -R 777 /tmp/output
  build:
    parameters:
      image:
        type: string
        default: jpgt-${CIRCLE_PROJECT_REPONAME}
      tag:
        type: string
        default: latest
    steps:
      - run:
          name: "Building lod-gateway docker image"
          command: >
            docker build -f Dockerfile.poc 
            -t << parameters.image>>:<< parameters.tag >> 
            .
  test:
    parameters:
      image:
        type: string
        default: jpgt-${CIRCLE_PROJECT_REPONAME}
      tag:
        type: string
        default: latest
    steps:
      - run:
          name: Linting with Black
          command: >
            docker run
            << parameters.image>>:<< parameters.tag >>
            black --check .
      - run:
          name: Testing PyLD using pytest
          command: >
            docker run
            --env-file .env.example
            --env DATABASE=sqlite://
            --env APPLICATION_NAMESPACE="ns"
            --volume /tmp/output:/output
            << parameters.image>>:<< parameters.tag >>
            pytest
            --junitxml=/output/test-results/pytest/junit.xml
            --cov=flaskapp
            --cov-report html:/output/test-reports/pytest
      - run:
          name: Testing RDFLib using pytest
          command: >
            docker run
            --env-file .env.example
            --env DATABASE=sqlite://
            --env APPLICATION_NAMESPACE="ns"
            --env USE_PYLD_REFORMAT=false
            --volume /tmp/output:/output
            << parameters.image>>:<< parameters.tag >>
            pytest
            --junitxml=/output/test-results/pytest/junit.xml
            --cov=flaskapp
            --cov-report html:/output/test-reports/pytest

  store:
    steps:
      - store_test_results:
          path: /tmp/output/test-results
      - store_artifacts:
          path: /tmp/output/test-reports
          destination: reports

executors:
  build_env:
    machine:
      docker_layer_caching: true
      resource_class: large
      image: ubuntu-2004:current
