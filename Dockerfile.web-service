FROM python:3.13 AS base

LABEL description "Getty LOD Gateway Service"

# Set our working directory
ENV WHEELS=/wheels
ENV LANG=C.UTF-8
ENV LC_ALL=C.UTF-8
ENV PYTHONUNBUFFERED=1

# Install ca-certificates so that SSL/TLS can function from within the container
RUN apt-get update && apt-get -y install ca-certificates libpcre3 libpcre3-dev

RUN pip install --upgrade pip

FROM base AS buildenv

WORKDIR ${WHEELS}

COPY requirements.txt requirements.txt
RUN pip wheel --wheel-dir=${WHEELS} -r ${WHEELS}/requirements.txt

FROM base AS runtime

COPY --from=buildenv ${WHEELS} ${WHEELS}

RUN pip install -f ${WHEELS} --no-index -r ${WHEELS}/requirements.txt \
 && rm -rf ${WHEELS} \
 && rm -rf /root/.cache/pip/*

WORKDIR /app

# Copy VERSION file for the current version to be displayed in the dashboard
COPY VERSION.txt version.txt
COPY requirements.txt requirements.txt

RUN groupadd -r flask && useradd -r -g flask flask

COPY ./source/web-service .
RUN chmod +x startup.sh
RUN chown -R flask:flask .

# Install our application 
RUN pip install -e .

# Set the default shell to BASH rather than the more basic (DA)SH
SHELL ["/bin/bash", "--login", "-c"]

# Tell Docker to open port 5100; this is the same port as we have configured for use by Flask
EXPOSE 5100

#USER flask
USER root

# Run our application startup script...
CMD [ "./startup.sh" ]
