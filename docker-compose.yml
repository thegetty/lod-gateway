version: "3.0"

services:
    postgres:
        build:
            context: ./
            dockerfile: ./services/postgres/Dockerfile
        environment:
            POSTGRES_USER:     ${MART_POSTGRES_USER}
            POSTGRES_PASSWORD: ${MART_POSTGRES_PASSWORD}
            POSTGRES_DB:       ${MART_POSTGRES_DB}
            POSTGRES_PORT:     5432
            PGDATA:            ${MART_PGDATA}
            TZ:                ${MART_TIMEZONE}
        ports:
            - "${MART_POSTGRES_PORT}:5432"
        stop_grace_period: 10s
        # stop_signal: SIGTERM
        volumes:
            # - data_postgres:/var/lib/postgresql/data/mart
            - ./data/postgres/data:/var/lib/postgresql/data/mart
            # - ./services/postgres/pg_hba.conf:/var/lib/postgresql/data/pg_hba.conf

    transformer:
        build:
            context: ./
            dockerfile: ./source/transformer/Dockerfile
        environment:
            LD_LIBRARY_PATH:      /usr/local/lib:/usr/local/lib64
            SHELL:                ${SHELL}
            TZ:                   ${MART_TIMEZONE}
            MART_DOR_BASE_URL:    ${MART_DOR_BASE_URL}
            MART_DOR_API_USER:    ${MART_DOR_API_USER}
            MART_DOR_API_KEY:     ${MART_DOR_API_KEY}
            MART_DOR_API_VERSION: ${MART_DOR_API_VERSION}
            MART_DOR_API_CACHING: ${MART_DOR_API_CACHING}
            MART_LOD_BASE_URL:    ${MART_LOD_BASE_URL}
        volumes:
            # use a volume mount to dynamically bind the application's source code
            - ./source/transformer/startup.py:/startup.py
            - ./source/transformer/startup.sh:/startup.sh
            - ./source/transformer/app:/app
            # use a volume mount to dynamically bind the shared utilities code
            - ./source/app/utilities:/app/utilities
            # use a volume mount to dynamically bind the data path
            - ./data:/usr/local/mart/data
            # use a volume mount to dynamically bind the tests path
            - ./tests:/usr/local/mart/tests
        ports:
             - "${MART_TRANSFORMER_PORT}:5200"
        links:
            - postgres:postgres
        stdin_open: true
        tty: true

    web:
        build:
            context: ./
            dockerfile: ./source/web-service/Dockerfile
        environment:
            LD_LIBRARY_PATH: /usr/local/lib:/usr/local/lib64
            SHELL:           ${SHELL}
            TZ:              ${MART_TIMEZONE}
            FLASK_ENV:       ${MART_FLASK_ENV}
            FLASK_DEBUG:     ${MART_FLASK_DEBUG}
            FLASK_APP:       ${MART_FLASK_APP}
        volumes:
            # use a volume mount to dynamically bind the application's source code
            - ./source/web-service/startup.py:/startup.py
            - ./source/web-service/startup.sh:/startup.sh
            - ./source/web-service/app:/app
            # use a volume mount to dynamically bind the shared utilities code
            - ./source/app/utilities:/app/utilities
            # use a volume mount to dynamically bind the data path
            - ./data:/usr/local/mart/data
            # use a volume mount to dynamically bind the tests path
            - ./tests:/usr/local/mart/tests
        ports:
            - "${MART_WEB_SERVICE_PORT}:5100"
        links:
            - postgres:postgres

volumes:
    data_postgres:
        # name: mart-postgres-data
        driver: local
        driver_opts:
            type: none
            device: ${PWD-.}/data/postgres/data
            o: bind
#    data_transformer:
#        driver: local
#        driver_opts:
#            type: none
#            device: ${PWD-.}/data/transformer
#            o: bind
#    data_web_service:
#        driver: local
#        driver_opts:
#            type: none
#            device: ${PWD-.}/data/web_service
#            o: bind