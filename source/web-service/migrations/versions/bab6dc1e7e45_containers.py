"""empty message

Revision ID: bab6dc1e7e45
Revises: f059f3e51ea5
Create Date: 2025-08-05 20:21:06.716477

"""

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = "bab6dc1e7e45"
down_revision = "f059f3e51ea5"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "containers",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("dctitle", sa.String(length=150), nullable=False),
        sa.Column("dcdescription", sa.String(), nullable=True),
        sa.Column(
            "datetime_created",
            sa.DateTime(timezone=True),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=True,
        ),
        sa.Column("container_identifier", sa.String(length=200), nullable=False),
        sa.Column("is_root", sa.Boolean(), nullable=True),
        sa.Column("parent_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["parent_id"],
            ["containers.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("container_identifier"),
    )
    with op.batch_alter_table("containers", schema=None) as batch_op:
        batch_op.create_index(
            batch_op.f("ix_containers_container_identifier"),
            ["container_identifier"],
            unique=True,
        )
        batch_op.create_index(
            batch_op.f("ix_containers_datetime_created"),
            ["datetime_created"],
            unique=False,
        )
        batch_op.create_index(
            batch_op.f("ix_containers_is_root"), ["is_root"], unique=False
        )
        batch_op.create_index(
            batch_op.f("ix_containers_parent_id"), ["parent_id"], unique=False
        )

    op.create_table(
        "entity_list",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("entity_id", sa.String(length=250), nullable=False),
        sa.Column("entity_type", sa.String(length=70), nullable=False),
        sa.Column("is_container", sa.Boolean(), nullable=True),
        sa.Column(
            "date_added",
            sa.DateTime(timezone=True),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=True,
        ),
        sa.Column("container_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["container_id"],
            ["containers.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint(
            "container_id",
            "entity_id",
            name="_container_uniqueness_constraint",
        ),
    )
    with op.batch_alter_table("entity_list", schema=None) as batch_op:
        batch_op.create_index(
            batch_op.f("ix_entity_list_container_id"), ["container_id"], unique=False
        )
        batch_op.create_index(
            batch_op.f("ix_entity_list_entity_id"), ["entity_id"], unique=True
        )
        batch_op.create_index(
            batch_op.f("ix_entity_list_is_container"), ["is_container"], unique=False
        )

    with op.batch_alter_table("versions", schema=None) as batch_op:
        batch_op.drop_index("ix_versions_chronological_lookup")
        batch_op.create_index(
            "ix_versions_chronological_lookup",
            ["record_id", "datetime_updated", "entity_id"],
            unique=False,
            postgresql_using="btree",
            postgresql_ops={"datetime_updated": "DESC"},
        )

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("versions", schema=None) as batch_op:
        batch_op.drop_index(
            "ix_versions_chronological_lookup",
            postgresql_using="btree",
            postgresql_ops={"datetime_updated": "DESC"},
        )
        batch_op.create_index(
            "ix_versions_chronological_lookup",
            ["record_id", sa.text("datetime_updated DESC"), "entity_id"],
            unique=False,
        )

    with op.batch_alter_table("entity_list", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_entity_list_is_container"))
        batch_op.drop_index(batch_op.f("ix_entity_list_entity_id"))
        batch_op.drop_index(batch_op.f("ix_entity_list_container_id"))

    op.drop_table("entity_list")
    with op.batch_alter_table("containers", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_containers_parent_id"))
        batch_op.drop_index(batch_op.f("ix_containers_is_root"))
        batch_op.drop_index(batch_op.f("ix_containers_datetime_created"))
        batch_op.drop_index(batch_op.f("ix_containers_container_identifier"))

    op.drop_table("containers")
    # ### end Alembic commands ###
